{"version":3,"sources":["file:///C:/Users/%EC%9D%B4%EC%A7%80%EC%95%88/Documents/GitHub/MergeCollect/assets/script/Coin.ts"],"names":["_decorator","Component","geometry","input","Input","PhysicsSystem","tween","Vec3","IngameManager","ccclass","property","Coin","_ray","Ray","onEnable","on","EventType","TOUCH_MOVE","onMove","TOUCH_END","onTouchEnd","onDisable","off","event","raycast","drag","bind","setTilePosition","item","node","setPosition","hitPoint","x","z","Math","min","round","mapSetting","maxRow","maxCol","startRow","startCol","console","log","target","to","position","easing","start","hit","miss","touch","camera","screenPointToRay","getLocationX","getLocationY","instance","raycastResults","i","length","collider"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventTouch, geometry, input, Input, PhysicsSystem, physics, tween, Vec3 } from 'cc';\nimport { IngameManager } from './IngameManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Coin')\nexport class Coin extends Component {\n    private _ray: geometry.Ray = new geometry.Ray();\n\n    onEnable() {\n        input.on(Input.EventType.TOUCH_MOVE, this.onMove, this);\n        input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    onDisable() {\n        input.off(Input.EventType.TOUCH_MOVE, this.onMove, this);\n        input.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    private onMove(event: EventTouch) {\n        this.raycast(event, this.drag.bind(this));\n    }\n\n    private onTouchEnd(event: EventTouch) {\n        this.raycast(event, this.setTilePosition.bind(this));\n    }\n\n    private drag(item: physics.PhysicsRayResult) {\n        this.node.setPosition(item.hitPoint.x, 0, item.hitPoint.z);\n    }\n\n    private setTilePosition(item: physics.PhysicsRayResult) {\n        let x = Math.min(Math.round(item.hitPoint.x), IngameManager.mapSetting.maxRow / 2);\n        let z = Math.min(Math.round(item.hitPoint.z), IngameManager.mapSetting.maxCol / 2);\n        if (x < IngameManager.mapSetting.startRow) {\n            x = IngameManager.mapSetting.startRow;\n        }\n        if (z < IngameManager.mapSetting.startCol) {\n            z = IngameManager.mapSetting.startCol;\n        }\n        console.log(x, z);\n        tween().target(this.node)\n            .to(0.25, { position: new Vec3(x, 0, z), easing: 'quadIn' })\n            .start();\n    }\n\n    private raycast(event: EventTouch, hit: Function, miss?: Function) {\n        const touch = event.touch!;\n        IngameManager.camera.screenPointToRay(touch.getLocationX(), touch.getLocationY(), this._ray);\n        if (PhysicsSystem.instance.raycast(this._ray)) {\n            const raycastResults = PhysicsSystem.instance.raycastResults;\n            for (let i = 0; i < raycastResults.length; i++) {\n                const item = raycastResults[i];\n                if (item.collider.node == this.node) {\n                    hit(item);\n                    break;\n                }\n            }\n        } else {\n            miss && miss();\n        }\n    }\n}\n\n"]}