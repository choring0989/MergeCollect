{"version":3,"sources":["file:///C:/Users/%EC%9D%B4%EC%A7%80%EC%95%88/Documents/GitHub/MergeCollect/assets/script/ObjectFactory.ts"],"names":["_decorator","Component","Prefab","NodePool","ccclass","property","ObjectFactory","type","pools","Map","start","initSetAll","prefabs","forEach","prefab","set","name","instance","_instance","poolName","get"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Q,OAAAA,Q;;;;;;;;;OAClC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;+BAGjBM,a,WADZF,OAAO,CAAC,eAAD,C,UAGHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL;AAAR,OAAD,C,sCAHb,MACaI,aADb,SACmCL,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA,eAMjCO,KANiC,GAMzB,IAAIC,GAAJ,EANyB;AAAA;;AAQzCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,UAAL;AACH;;AAEOA,QAAAA,UAAU,GAAG;AACjB,eAAKC,OAAL,CAAaC,OAAb,CAAsBC,MAAD,IAAY;AAC7BR,YAAAA,aAAa,CAACS,GAAd,CAAkBD,MAAM,CAACE,IAAzB;AACH,WAFD;AAGH;;AAEkB,mBAARC,QAAQ,GAAkB;AACjC,iBAAOX,aAAa,CAACY,SAArB;AACH;;AAES,eAAHH,GAAG,CAACI,QAAD,EAAmB;AACzBb,UAAAA,aAAa,CAACW,QAAd,CAAuBT,KAAvB,CAA6BO,GAA7B,CAAiCI,QAAjC,EAA2C,IAAIhB,QAAJ,CAAagB,QAAb,CAA3C;AACH;;AAES,eAAHC,GAAG,CAACD,QAAD,EAA6B;AACnC,iBAAOb,aAAa,CAACW,QAAd,CAAuBT,KAAvB,CAA6BY,GAA7B,CAAiCD,QAAjC,CAAP;AACH;;AA5BwC,O,UAK1BD,S,GAA2B,IAAIZ,OAAJ,E;;;;;iBAFd,E","sourcesContent":["import { _decorator, Component, Prefab, NodePool } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ObjectFactory')\nexport class ObjectFactory extends Component {\n\n    @property({ type: Prefab })\n    private prefabs: Prefab[] = [];\n\n    private static _instance: ObjectFactory = new ObjectFactory();\n    private pools = new Map<string, NodePool>();\n\n    start() {\n        this.initSetAll();\n    }\n\n    private initSetAll() {\n        this.prefabs.forEach((prefab) => {\n            ObjectFactory.set(prefab.name);\n        });\n    }\n\n    static get instance(): ObjectFactory {\n        return ObjectFactory._instance;\n    }\n\n    static set(poolName: string) {\n        ObjectFactory.instance.pools.set(poolName, new NodePool(poolName));\n    }\n\n    static get(poolName: string): NodePool {\n        return ObjectFactory.instance.pools.get(poolName);\n    }\n}\n\n"]}